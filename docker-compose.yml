version: '3.8'

services:
  # Jellyfin Server (similar to your N100 setup)
  jellyfin-dev:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin-dev
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - ./jellyfin-config:/config
      - ./test-media:/media
      - ./test-media-archival:/media/archival  # Simulate Xeon storage
    environment:
      - JELLYFIN_PublishedServerUrl=http://localhost:8096
    networks:
      - jellyfin-network
    depends_on:
      - n8n-dev

  # n8n for testing power monitoring API (similar to your N100 setup)
  n8n-dev:
    image: n8nio/n8n:latest
    container_name: n8n-dev
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - ./n8n-data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_BASIC_AUTH_ACTIVE=false
      - WEBHOOK_URL=http://localhost:5678/
    networks:
      - jellyfin-network

  # Mock Xeon server for testing (simulates your Xeon server)
  mock-xeon:
    image: alpine:latest
    container_name: mock-xeon
    restart: unless-stopped
    ports:
      - "8080:80"  # HTTP service for testing
    volumes:
      - ./mock-xeon:/var/www/localhost/htdocs
    command: >
      sh -c "apk add --no-cache nginx &&
              echo 'Mock Xeon Server - Power Status API' > /var/www/localhost/htdocs/index.html &&
              nginx -g 'daemon off;'"
    networks:
      - jellyfin-network

  # Power monitoring simulator (simulates your Zigbee power monitor)
  power-monitor-sim:
    image: python:3.11-alpine
    container_name: power-monitor-sim
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./power-monitor-sim:/app
    working_dir: /app
    command: >
      sh -c "pip install flask requests &&
              python power_simulator.py"
    networks:
      - jellyfin-network
    depends_on:
      - mock-xeon

networks:
  jellyfin-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  jellyfin-config:
  n8n-data:
  test-media:
  test-media-archival:
